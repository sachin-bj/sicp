Exercise - 1.1
------------------------------------------- 
1. 10

2. (+ 5 3 4) 
	=> (5+3+4) 
	=> 12

3. (- 9 1) 
	=> (9-1) => 8

4. (/ 6 2) 
	=> (6/2) => 3

5. (+ (* 2 4) (- 4 6)) 
	=> (+ 8 2) 
	=> 10

6. (define a 3) 
	=> a=3

7. (define b (+ a 1)) 
	=> b=(+ a 1)
	=>b=(+ 3 1)
	=>b=4

8. (+ a b (* a b)) 
	=> (+ 3 4 (* 3 4))
	=> (+ 3 4 12)
	=> 19

9. (= a b)
	=> a=b

10. (if (and (> b a) (< b (* a b))) ba)
	=> if ( (b>a) and (b<(a*b)))
		b
	    else
		a
	=> if ( (4 > 4) and ( 4 < 16)
	answer => 4(a)

11. (cond ((= a 4) 6)
      ((= b 4) (+ 6 7 a))
      (else 25))

	=> (cond ((a = 4) 6)
		 ((b = 4) 17)
		 (else 25))
	answer => 6 since (a=4)

12. (+ 2 (if (> b a) b a))
	=> (+ 2 (if (> 4 4) b a))
	   (+ 2 4)
	   answer = 6

13. (* (cond ((> a b) a)
         ((< a b) b)
         (else -1))
   (+ a 1))

	=> (* -1 5)  //a = 4,b = 4;
	answer = -5 

Exercise - 1.2
------------------------------------

=> (/  (+ 5 (+ 4(- 2(- 3(+ 6(/ 4 5))))))
	(* 3 (- 6 2) (- 2 7)))


Exercise - 1.3
------------------------------------

(define (square x) x * x)
(define (sum of square x y z) (+ (square x) (squre y) (square z)))
(define (min x y) (if (< x y) x y))
(define (min x y z) (if (< (min x y) z) (min x y) z))
(define (sum of square of two large x y z) (- (sum of square x y z) (square (min x y z))))

Exercise - 1.4
-------------------------------------

(define (a-plus-abs-b a b)
  ((if (> b 0) + -) a b))

=>  if "b>0" then (+ a b)
    else (- a b)


